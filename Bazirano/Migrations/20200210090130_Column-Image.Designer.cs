// <auto-generated />
using System;
using Bazirano.Models.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bazirano.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200210090130_Column-Image")]
    partial class ColumnImage
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bazirano.Models.Board.BoardPost", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BoardThreadId");

                    b.Property<DateTime>("DatePosted");

                    b.Property<string>("Image");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("BoardThreadId");

                    b.ToTable("BoardPosts");
                });

            modelBuilder.Entity("Bazirano.Models.Board.BoardThread", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ImageCount");

                    b.Property<bool>("IsLocked");

                    b.Property<int>("PostCount");

                    b.HasKey("Id");

                    b.ToTable("BoardThreads");
                });

            modelBuilder.Entity("Bazirano.Models.Column.Author", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bio");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("Bazirano.Models.Column.ColumnPost", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AuthorId");

                    b.Property<DateTime>("DatePosted");

                    b.Property<string>("Image");

                    b.Property<string>("Text");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("ColumnPosts");
                });

            modelBuilder.Entity("Bazirano.Models.News.NewsPost", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatePosted");

                    b.Property<long>("Guid");

                    b.Property<string>("Image");

                    b.Property<string>("Keywords");

                    b.Property<string>("Summary");

                    b.Property<string>("Text");

                    b.Property<string>("Title");

                    b.Property<long>("ViewCount");

                    b.HasKey("Id");

                    b.ToTable("NewsPosts");
                });

            modelBuilder.Entity("Bazirano.Models.Shared.Comment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ColumnPostId");

                    b.Property<DateTime>("DatePosted");

                    b.Property<long?>("NewsPostId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<string>("Username")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("ColumnPostId");

                    b.HasIndex("NewsPostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Bazirano.Models.Board.BoardPost", b =>
                {
                    b.HasOne("Bazirano.Models.Board.BoardThread")
                        .WithMany("Posts")
                        .HasForeignKey("BoardThreadId");
                });

            modelBuilder.Entity("Bazirano.Models.Column.ColumnPost", b =>
                {
                    b.HasOne("Bazirano.Models.Column.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");
                });

            modelBuilder.Entity("Bazirano.Models.Shared.Comment", b =>
                {
                    b.HasOne("Bazirano.Models.Column.ColumnPost")
                        .WithMany("Comments")
                        .HasForeignKey("ColumnPostId");

                    b.HasOne("Bazirano.Models.News.NewsPost")
                        .WithMany("Comments")
                        .HasForeignKey("NewsPostId");
                });
#pragma warning restore 612, 618
        }
    }
}
